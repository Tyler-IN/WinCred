name: .NET

on:
  workflow_call:
    inputs:
      tag:
        required: false
        type: string
  workflow_dispatch: 
    inputs:
      tag:
        description: 'Tag to do a build for, or leave empty for latest'
        required: false
        type: string
  push:
    branches: [ "main" ]
    tags: [ "v**" ]

defaults:
  run:
    shell: bash

jobs:
  build_and_test_on_windows:
    name: Build & Test
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4.2.2
        name: Checkout (Workflow Call)
        if: ${{ inputs.tag != '' }}
        with:
          show-progress: false
          ref: ${{ inputs.tag }}
      - uses: actions/checkout@v4.2.2
        name: Checkout (Workflow Dispatch)
        if: ${{ github.event.inputs.tag != '' && inputs.tag == '' }}
        with:
          show-progress: false
          ref: ${{ github.event.inputs.tag }}
      - uses: actions/checkout@v4.2.2
        name: Checkout (Latest)
        if: ${{ inputs.tag == '' && github.event.inputs.tag == '' }}
        with:
          show-progress: false
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache/restore@v4.2.3
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          path: |
            C:/Users/runneradmin/.nuget/packages
            C:/Users/runneradmin/AppData/Local/NuGet/http-cache
            C:/Users/runneradmin/AppData/Local/NuGet/plugins-cache
            C:/Users/runneradmin/AppData/Local/NuGet/v3-cache
            C:/Users/runneradmin/AppData/Local/NuGet/Cache
      - name: Restore
        run: dotnet restore -p:Configuration=Release
      - name: Save Cache
        id: save-cache
        if: always() && steps.save-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4.2.3
        with:
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
          path: |
            C:/Users/runneradmin/.nuget/packages
            C:/Users/runneradmin/AppData/Local/NuGet/http-cache
            C:/Users/runneradmin/AppData/Local/NuGet/plugins-cache
            C:/Users/runneradmin/AppData/Local/NuGet/v3-cache
            C:/Users/runneradmin/AppData/Local/NuGet/Cache
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal
      - name: Push Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Artifacts
          path: artifacts/*
          compression-level: 0
      - name: Push Tagged Package
        if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        run: >-
          dotnet nuget add source
          --username ${{ github.repository_owner }}
          --password ${{ secrets.GITHUB_TOKEN }}
          --store-password-in-clear-text
          --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          
          dotnet nuget push artifacts/*.nupkg --source "github" --api-key ${{ secrets.GITHUB_TOKEN }}
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_MULTILEVEL_LOOKUP: 0
      DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP3SUPPORT: 1
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      DOTNET_SYSTEM_GLOBALIZATION_PREDEFINED_CULTURES_ONLY: 1
      DOTNET_SYSTEM_NET_SOCKETS_INLINE_COMPLETIONS: 1
      DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: 1
      DOTNET_CLI_FORCE_UTF8_ENCODING: 1
      DOTNET_DISABLE_GUI_ERRORS: 1
      DOTNET_CLI_CONTEXT_ANSI_PASS_THRU: 1
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
      DOTNET_CLI_WORKLOAD_UPDATE_NOTIFY_DISABLE: 1
      DOTNET_USE_POLLING_FILE_WATCHER: 0
      NUGET_XMLDOC_MODE: skip
      DOTNET_EnableDiagnostics: 0
      DOTNET_EnableEventPipe: 0